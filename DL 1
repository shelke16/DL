
import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from tensorflow.keras.optimizers import Adam

df = pd.read_csv("BostonHousing.csv")
df.head(); df.info()

X = df.drop(columns=['medv'])
y = df['medv']
X_train, X_test, y_train, y_test = \
train_test_split(X, y, test_size=0.2, \
random_state=42)

model = keras.Sequential([keras.Input(shape=(X.shape[1],)), \
                          layers.Dense(64, activation='relu'), \
                          layers.Dense(32, activation='relu'), \
                          layers.Dense(1, activation='linear')])

model.compile(optimizer=Adam(learning_rate=0.01), loss='mse', metrics=['mae'])

history = model.fit(X_train, y_train, epochs=100, validation_data=(X_test, y_test), batch_size=16, verbose=1)

loss, mae = model.evaluate(X_test, y_test)
print(f"Test Loss (MSE): {loss}")
print(f"Test Mean Absolute Error (MAE): {mae}")

predictions = model.predict(X_test)

plt.scatter(y_test, predictions)
plt.xlabel("Actual Prices ($1000s)")
plt.ylabel("Predicted Prices ($1000s)")
plt.title("Actual vs Predicted House Prices")
plt.show()
